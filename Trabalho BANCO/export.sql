-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.animal
(
    animal_codigo integer NOT NULL DEFAULT nextval('animal_seq'::regclass),
    apelido character varying(100) COLLATE pg_catalog."default" NOT NULL,
    nascimento date NOT NULL,
    tutor_codigo integer NOT NULL,
    raca_codigo integer NOT NULL,
    CONSTRAINT pk_animal PRIMARY KEY (animal_codigo)
);

CREATE TABLE IF NOT EXISTS public.aquisicao_produto
(
    aquisicao_codigo serial NOT NULL,
    produto_codigo integer,
    quantidade integer,
    data_aquisicao date DEFAULT CURRENT_DATE,
    CONSTRAINT aquisicao_produto_pkey PRIMARY KEY (aquisicao_codigo)
);

CREATE TABLE IF NOT EXISTS public.atendimento
(
    atendimento_sequencia integer NOT NULL DEFAULT nextval('atendimento_seq'::regclass),
    data date NOT NULL,
    valor numeric(10, 2) NOT NULL DEFAULT 0,
    situacao_codigo integer NOT NULL,
    animal_codigo integer NOT NULL,
    parcelas integer NOT NULL DEFAULT 0,
    CONSTRAINT pk_atendimento PRIMARY KEY (atendimento_sequencia)
);

CREATE TABLE IF NOT EXISTS public.atendimento_produto
(
    atendimento_produto_sequencia integer NOT NULL DEFAULT nextval('atdm_pro_seq'::regclass),
    atendimento_sequencia integer NOT NULL,
    produto_codigo integer NOT NULL,
    quantidade integer NOT NULL,
    CONSTRAINT pk_atendimento_produto PRIMARY KEY (atendimento_produto_sequencia)
);

CREATE TABLE IF NOT EXISTS public.atendimento_servico
(
    atendimento_servico_sequencia integer NOT NULL DEFAULT nextval('atdm_serv_seq'::regclass),
    atendimento_sequencia integer NOT NULL,
    servico_codigo integer NOT NULL,
    quantidade integer NOT NULL,
    CONSTRAINT pk_atendimento_servico PRIMARY KEY (atendimento_servico_sequencia)
);

CREATE TABLE IF NOT EXISTS public.atendimento_vacina
(
    atendimento_vacina_sequencia integer NOT NULL DEFAULT nextval('atdm_vac_seq'::regclass),
    atendimento_sequencia integer NOT NULL,
    vacina_codigo integer NOT NULL,
    quantidade integer NOT NULL,
    CONSTRAINT pk_atendimento_vacina PRIMARY KEY (atendimento_vacina_sequencia)
);

CREATE TABLE IF NOT EXISTS public.categoria
(
    categoria_codigo integer NOT NULL DEFAULT nextval('categoria_seq'::regclass),
    descricao character varying(100) COLLATE pg_catalog."default" NOT NULL,
    desconto numeric(5, 2) NOT NULL DEFAULT 0,
    CONSTRAINT pk_categoria PRIMARY KEY (categoria_codigo)
);

CREATE TABLE IF NOT EXISTS public.especie
(
    especie_codigo integer NOT NULL DEFAULT nextval('especie_seq'::regclass),
    descricao character varying COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT pk_especie PRIMARY KEY (especie_codigo)
);

CREATE TABLE IF NOT EXISTS public.fornecedor
(
    fornecedor_codigo integer NOT NULL DEFAULT nextval('fornecedor_seq'::regclass),
    razao character varying COLLATE pg_catalog."default" NOT NULL,
    contato character varying(100) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT fornecedor_pkey PRIMARY KEY (fornecedor_codigo)
);

CREATE TABLE IF NOT EXISTS public.parcela
(
    parcela_sequencia integer NOT NULL DEFAULT nextval('parcela_seq'::regclass),
    atendimento_sequencia integer NOT NULL,
    numero integer NOT NULL,
    vencimento date NOT NULL,
    valor numeric(10, 2) NOT NULL,
    pagamento date,
    valor_pago numeric(10, 2) NOT NULL DEFAULT 0,
    CONSTRAINT pk_parcela PRIMARY KEY (parcela_sequencia)
);

CREATE TABLE IF NOT EXISTS public.pedido
(
    pedido_numero integer NOT NULL DEFAULT nextval('pedido_seq'::regclass),
    data date NOT NULL,
    valor numeric(10, 2) NOT NULL,
    situacao character varying(100) COLLATE pg_catalog."default" NOT NULL,
    fornecedor_codigo integer NOT NULL,
    CONSTRAINT pk_pedido PRIMARY KEY (pedido_numero)
);

CREATE TABLE IF NOT EXISTS public.pedido_produto
(
    pedido_produto_sequencia integer NOT NULL DEFAULT nextval('ped_pro_seq'::regclass),
    pedido_pedido_numero integer NOT NULL,
    produto_produto_codigo integer NOT NULL,
    quantidade integer NOT NULL,
    CONSTRAINT pk_pedido_produto PRIMARY KEY (pedido_produto_sequencia)
);

CREATE TABLE IF NOT EXISTS public.produto
(
    produto_codigo integer NOT NULL DEFAULT nextval('produto_seq'::regclass),
    descricao character varying(100) COLLATE pg_catalog."default" NOT NULL,
    valor numeric(10, 2) NOT NULL,
    estoque integer NOT NULL DEFAULT 0,
    categoria_codigo integer NOT NULL,
    CONSTRAINT pk_produto PRIMARY KEY (produto_codigo)
);

CREATE TABLE IF NOT EXISTS public.raca
(
    raca_codigo integer NOT NULL DEFAULT nextval('raca_seq'::regclass),
    descricao character varying COLLATE pg_catalog."default" NOT NULL,
    especie_codigo integer NOT NULL,
    CONSTRAINT pk_raca PRIMARY KEY (raca_codigo)
);

CREATE TABLE IF NOT EXISTS public.servico
(
    servico_codigo integer NOT NULL DEFAULT nextval('servico_seq'::regclass),
    descricao character varying(100) COLLATE pg_catalog."default" NOT NULL,
    valor numeric(10, 2) NOT NULL,
    tipo_codigo integer NOT NULL,
    CONSTRAINT pk_servico PRIMARY KEY (servico_codigo)
);

CREATE TABLE IF NOT EXISTS public.situacao
(
    situacao_codigo integer NOT NULL DEFAULT nextval('situacao_seq'::regclass),
    descricao character varying COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT pk_situacao PRIMARY KEY (situacao_codigo)
);

CREATE TABLE IF NOT EXISTS public.tipo
(
    tipo_codigo integer NOT NULL DEFAULT nextval('tipo_seq'::regclass),
    descricao character varying(100) COLLATE pg_catalog."default" NOT NULL,
    desconto numeric(10, 2) NOT NULL DEFAULT 0,
    CONSTRAINT pk_tipo PRIMARY KEY (tipo_codigo)
);

CREATE TABLE IF NOT EXISTS public.tutor
(
    tutor_codigo integer NOT NULL DEFAULT nextval('tutor_seq'::regclass),
    nome character varying(100) COLLATE pg_catalog."default" NOT NULL,
    contato character varying(100) COLLATE pg_catalog."default" NOT NULL,
    saldodevedor numeric(10, 2) NOT NULL DEFAULT 0,
    CONSTRAINT pk_tutor PRIMARY KEY (tutor_codigo)
);

CREATE TABLE IF NOT EXISTS public.vacina
(
    vacina_codigo integer NOT NULL DEFAULT nextval('vacina_seq'::regclass),
    descricao character varying(100) COLLATE pg_catalog."default" NOT NULL,
    valor numeric(10, 2) NOT NULL,
    CONSTRAINT pk_vacina PRIMARY KEY (vacina_codigo)
);

ALTER TABLE IF EXISTS public.animal
    ADD CONSTRAINT animal_raca_codigo_fkey FOREIGN KEY (raca_codigo)
    REFERENCES public.raca (raca_codigo) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.animal
    ADD CONSTRAINT animal_tutor_codigo_fkey FOREIGN KEY (tutor_codigo)
    REFERENCES public.tutor (tutor_codigo) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.aquisicao_produto
    ADD CONSTRAINT aquisicao_produto_produto_codigo_fkey FOREIGN KEY (produto_codigo)
    REFERENCES public.produto (produto_codigo) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.atendimento
    ADD CONSTRAINT atendimento_animal_codigo_fkey FOREIGN KEY (animal_codigo)
    REFERENCES public.animal (animal_codigo) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.atendimento
    ADD CONSTRAINT atendimento_situacao_codigo_fkey FOREIGN KEY (situacao_codigo)
    REFERENCES public.situacao (situacao_codigo) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.atendimento_produto
    ADD CONSTRAINT atendimento_produto_atendimento_sequencia_fkey FOREIGN KEY (atendimento_sequencia)
    REFERENCES public.atendimento (atendimento_sequencia) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.atendimento_produto
    ADD CONSTRAINT atendimento_produto_produto_codigo_fkey FOREIGN KEY (produto_codigo)
    REFERENCES public.produto (produto_codigo) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.atendimento_servico
    ADD CONSTRAINT atendimento_servico_atendimento_sequencia_fkey FOREIGN KEY (atendimento_sequencia)
    REFERENCES public.atendimento (atendimento_sequencia) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.atendimento_servico
    ADD CONSTRAINT atendimento_servico_servico_codigo_fkey FOREIGN KEY (servico_codigo)
    REFERENCES public.servico (servico_codigo) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.atendimento_vacina
    ADD CONSTRAINT atendimento_vacina_atendimento_sequencia_fkey FOREIGN KEY (atendimento_sequencia)
    REFERENCES public.atendimento (atendimento_sequencia) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.atendimento_vacina
    ADD CONSTRAINT atendimento_vacina_vacina_codigo_fkey FOREIGN KEY (vacina_codigo)
    REFERENCES public.vacina (vacina_codigo) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.parcela
    ADD CONSTRAINT parcela_atendimento_sequencia_fkey FOREIGN KEY (atendimento_sequencia)
    REFERENCES public.atendimento (atendimento_sequencia) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.pedido
    ADD CONSTRAINT pedido_fornecedor_codigo_fkey FOREIGN KEY (fornecedor_codigo)
    REFERENCES public.fornecedor (fornecedor_codigo) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.pedido_produto
    ADD CONSTRAINT pedido_produto_pedido_pedido_numero_fkey FOREIGN KEY (pedido_pedido_numero)
    REFERENCES public.pedido (pedido_numero) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.pedido_produto
    ADD CONSTRAINT pedido_produto_produto_produto_codigo_fkey FOREIGN KEY (produto_produto_codigo)
    REFERENCES public.produto (produto_codigo) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.produto
    ADD CONSTRAINT produto_categoria_codigo_fkey FOREIGN KEY (categoria_codigo)
    REFERENCES public.categoria (categoria_codigo) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.raca
    ADD CONSTRAINT raca_especie_codigo_fkey FOREIGN KEY (especie_codigo)
    REFERENCES public.especie (especie_codigo) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.servico
    ADD CONSTRAINT servico_tipo_codigo_fkey FOREIGN KEY (tipo_codigo)
    REFERENCES public.tipo (tipo_codigo) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;